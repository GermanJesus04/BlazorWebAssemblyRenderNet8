@page "/edit-game"
@page "/edit-game/{id:int}"
@inject HttpClient _http
@inject NavigationManager _navegar


@rendermode @(new InteractiveWebAssemblyRenderMode (prerender: false))


@if (id is null)
{
    <PageTitle>Add a New Video Game</PageTitle>
    <h3>Add a New Video Game</h3>
}
else
{
    <PageTitle>Edit @CurrentGame.Title</PageTitle>
    <h3>Edit @CurrentGame.Title</h3>
}

<EditForm Model="CurrentGame" OnSubmit="HandleSubmit">
    <div>
        <label for="title">Title</label>
        <InputText id="title" @bind-Value="CurrentGame.Title" class="form-control" />
    </div>
    <div>
        <label for="publisher">Publisher</label>
        <InputText id="publisher" @bind-Value="CurrentGame.Publisher" class="form-control" />
    </div>
    <div>
        <label for="releaseyear">Release Year</label>
        <InputNumber id="releaseyear" @bind-Value="CurrentGame.ReleaseYear" class="form-control" />
    </div>
    <br/>
    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {

    [Parameter]
    public int? id { get; set; }

    public VideoGame CurrentGame { get; set; } = new VideoGame();

    protected override async Task OnParametersSetAsync()
    {
        if (id is not null)
        {
            var game = await _http.GetFromJsonAsync<VideoGame>($"api/videogames/{(int)id}");
            if (game is not null)
            {
                CurrentGame = game;
            }
        }
    }

    async Task HandleSubmit()
    {
        if (id is not null)
        {
            //update
            var result = await _http.PutAsJsonAsync<VideoGame>($"api/videogames/{id}", CurrentGame);
            CurrentGame = await result.Content.ReadFromJsonAsync<VideoGame>();
             _navegar.NavigateTo("/videogames");
        }
        else
        {
            //add
            var result = await _http.PostAsJsonAsync<VideoGame>("api/videogames", CurrentGame);
            // CurrentGame = await result.Content.ReadFromJsonAsync<VideoGame>();
            if(result.StatusCode == System.Net.HttpStatusCode.OK)
                _navegar.NavigateTo("/videogames");

        }
    }

}
